#lang racket

;; Project 1 - Hannah Ali - CS4337

;; ---------------------------------------------------------------------------------------------
;; looking up value from history - parameters (index, hist (array of history) )
;;	validate if index is valid
;;		return "invalid expression" if not
;;	else
;;		return value at index in history
;; ---------------------------------------------------------------------------------------------

;; ---------------------------------------------------------------------------------------------
;; evaluating expression - parameters (list, hist (array of history) )
;; ---------------------------------------------------------------------------------------------



;; ---------------------------------------------------------------------------------------------
;; helper to split string
;; ---------------------------------------------------------------------------------------------


;; ---------------------------------------------------------------------------------------------
;; helper to see if the program is running in interactive or batch
;; ---------------------------------------------------------------------------------------------

(define prompt?
  (let ([args (current-command-line-arguments)])
    (cond
      [(= (vector-length args) 0) #t]
      [(string=? (vector-ref args 0) "-b") #f]
      [(string=? (vector-ref args 0) "--batch") #f]
      [else #t])))

;; ---------------------------------------------------------------------------------------------
;; creating main looping through string
;; ---------------------------------------------------------------------------------------------



;; ---------------------------------------------------------------------------------------------
;; starting program
;; ---------------------------------------------------------------------------------------------
